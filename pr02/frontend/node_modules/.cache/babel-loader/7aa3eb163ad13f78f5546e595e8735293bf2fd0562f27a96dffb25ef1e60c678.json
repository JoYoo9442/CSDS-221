{"ast":null,"code":"var _jsxFileName = \"/Users/yoosoybeans/workspace/CWRU/CSDS-221/pr02/frontend/src/components/List/TaskList.tsx\";\nimport React from 'react';\nimport { Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = _ref => {\n  let {\n    tasks,\n    editTask,\n    deleteTask\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Is Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: task.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: task.priority\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: editTask,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"error\",\n              onClick: () => {\n                deleteTask(task);\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","jsxDEV","_jsxDEV","TaskList","_ref","tasks","editTask","deleteTask","component","children","sx","minWidth","fileName","_jsxFileName","lineNumber","columnNumber","align","map","task","index","border","scope","title","description","date","priority","type","variant","color","onClick","_c","$RefreshReg$"],"sources":["/Users/yoosoybeans/workspace/CWRU/CSDS-221/pr02/frontend/src/components/List/TaskList.tsx"],"sourcesContent":["import React from 'react';\nimport {\n    FC, useState, useEffect, useCallback\n} from 'react';\nimport {\n    Button, Grid, AppBar, Box, Toolbar, IconButton, Typography,\n    Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n    Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper\n} from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport 'react-toastify/dist/ReactToastify.css';\n\ninterface TaskListProps {\n    tasks?: any[];\n    editTask: (event) => void;\n    deleteTask: (event) => void;\n}\n\nconst TaskList: FC<TaskListProps> = ({ tasks, editTask, deleteTask }) => {\n\n    return (\n        <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Task</TableCell>\n                        <TableCell>Description</TableCell>\n                        <TableCell>Deadline</TableCell>\n                        <TableCell>Priority</TableCell>\n                        <TableCell>Is Complete</TableCell>\n                        <TableCell align=\"right\">Actions</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {tasks.map((task, index) => (\n                        <TableRow\n                            key={index}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                        >\n                            <TableCell component=\"th\" scope=\"row\">\n                                {task.title}\n                            </TableCell>\n                            <TableCell>{task.description}</TableCell>\n                            <TableCell>{task.date}</TableCell>\n                            <TableCell>{task.priority}</TableCell>\n                            <TableCell>\n                                <input type=\"checkbox\" />\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={editTask}\n                                >\n                                    Edit\n                                </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"error\"\n                                    onClick={() => {\n                                        deleteTask(task)\n                                    }}\n                                >\n                                    Delete\n                                </Button>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}